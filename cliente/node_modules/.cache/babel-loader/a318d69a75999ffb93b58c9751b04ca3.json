{"ast":null,"code":"var _jsxFileName = \"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/TFG PLANTILLA GIT/TFGI-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/cliente/src/views/pages/tfgInfo/DonationCard.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport PropTypes from 'prop-types';\nimport { useState } from 'react'; // material-ui\n\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Avatar, Box, Button, Grid, Typography } from '@mui/material'; // project imports\n\nimport MainCard from 'ui-component/cards/MainCard';\nimport SkeletonTotalOrderCard from 'ui-component/cards/Skeleton/EarningCard'; // assets\n\nimport LocalMallOutlinedIcon from '@mui/icons-material/LocalMallOutlined';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CardWrapper = styled(MainCard)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    backgroundColor: theme.palette.primary.dark,\n    color: '#fff',\n    overflow: 'hidden',\n    position: 'relative',\n    '&>div': {\n      position: 'relative',\n      zIndex: 5\n    },\n    '&:after': {\n      content: '\"\"',\n      position: 'absolute',\n      width: 210,\n      height: 210,\n      background: theme.palette.primary[800],\n      borderRadius: '50%',\n      zIndex: 1,\n      top: -85,\n      right: -95,\n      [theme.breakpoints.down('sm')]: {\n        top: -105,\n        right: -140\n      }\n    },\n    '&:before': {\n      content: '\"\"',\n      position: 'absolute',\n      zIndex: 1,\n      width: 210,\n      height: 210,\n      background: theme.palette.primary[800],\n      borderRadius: '50%',\n      top: -125,\n      right: -15,\n      opacity: 0.5,\n      [theme.breakpoints.down('sm')]: {\n        top: -155,\n        right: -70\n      }\n    }\n  };\n}); // ==============================|| DASHBOARD - TOTAL ORDER LINE CHART CARD ||============================== //\n\nconst DonationCard = _ref2 => {\n  _s();\n\n  let {\n    isLoading\n  } = _ref2;\n  const theme = useTheme();\n  const [amount, setAmount] = useState(\"\"); //cantidad a donar en ethers\n\n  const handleDonation = async e => {\n    try {\n      if (!window.ethereum) //Para ver si el usuario tiene cartera\n        throw new Error(\"No se encontro cartera de metamask.\");\n      await window.ethereum.send(\"eth_requestAccounts\");\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      console.log(\"enviando transaccion\");\n      const tx = await signer.sendTransaction({\n        to: constants.ADDRESS2,\n        value: ethers.utils.parseEther(amount),\n        gasPrice: signer.getGasPrice(),\n        gasLimit: 100000\n      });\n      console.log({\n        tx\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(SkeletonTotalOrderCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(CardWrapper, {\n      border: false,\n      content: false,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 4.25\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  fontSize: '1.7rem',\n                  fontWeight: 500,\n                  mr: 1,\n                  mt: 1.75,\n                  mb: 0.75\n                },\n                children: \"108 ether\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  fontSize: '1.2rem',\n                  fontWeight: 500,\n                  color: theme.palette.primary[200]\n                },\n                children: \"Total Recaudado\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(DonationCard, \"f26O2V6jq+Osb5dChpc8r2K1oHs=\", false, function () {\n  return [useTheme];\n});\n\n_c = DonationCard;\nDonationCard.propTypes = {\n  isLoading: PropTypes.bool\n};\nexport default DonationCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"DonationCard\");","map":{"version":3,"sources":["/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/TFG PLANTILLA GIT/TFGI-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/cliente/src/views/pages/tfgInfo/DonationCard.js"],"names":["PropTypes","useState","useTheme","styled","Avatar","Box","Button","Grid","Typography","MainCard","SkeletonTotalOrderCard","LocalMallOutlinedIcon","ArrowDownwardIcon","CardWrapper","theme","backgroundColor","palette","primary","dark","color","overflow","position","zIndex","content","width","height","background","borderRadius","top","right","breakpoints","down","opacity","DonationCard","isLoading","amount","setAmount","handleDonation","e","window","ethereum","Error","send","provider","ethers","providers","Web3Provider","signer","getSigner","console","log","tx","sendTransaction","to","constants","ADDRESS2","value","utils","parseEther","gasPrice","getGasPrice","gasLimit","err","p","fontSize","fontWeight","mr","mt","mb","propTypes","bool"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\n\n// material-ui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Avatar, Box, Button, Grid, Typography } from '@mui/material';\n\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport SkeletonTotalOrderCard from 'ui-component/cards/Skeleton/EarningCard';\n\n\n// assets\nimport LocalMallOutlinedIcon from '@mui/icons-material/LocalMallOutlined';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\n\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n    backgroundColor: theme.palette.primary.dark,\n    color: '#fff',\n    overflow: 'hidden',\n    position: 'relative',\n    '&>div': {\n        position: 'relative',\n        zIndex: 5\n    },\n    '&:after': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: theme.palette.primary[800],\n        borderRadius: '50%',\n        zIndex: 1,\n        top: -85,\n        right: -95,\n        [theme.breakpoints.down('sm')]: {\n            top: -105,\n            right: -140\n        }\n    },\n    '&:before': {\n        content: '\"\"',\n        position: 'absolute',\n        zIndex: 1,\n        width: 210,\n        height: 210,\n        background: theme.palette.primary[800],\n        borderRadius: '50%',\n        top: -125,\n        right: -15,\n        opacity: 0.5,\n        [theme.breakpoints.down('sm')]: {\n            top: -155,\n            right: -70\n        }\n    }\n}));\n\n// ==============================|| DASHBOARD - TOTAL ORDER LINE CHART CARD ||============================== //\n\nconst DonationCard = ({ isLoading }) => {\n    const theme = useTheme();\n    const [amount, setAmount] = useState(\"\"); //cantidad a donar en ethers\n\n\n    const handleDonation = async (e) => {\n        try{\n            if(!window.ethereum) //Para ver si el usuario tiene cartera\n                throw new Error(\"No se encontro cartera de metamask.\");\n            await window.ethereum.send(\"eth_requestAccounts\");\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\n            const signer = provider.getSigner();\n            console.log(\"enviando transaccion\")\n            const tx = await signer.sendTransaction({\n                to: constants.ADDRESS2,\n                value:  ethers.utils.parseEther(amount),\n                gasPrice: signer.getGasPrice(),\n                gasLimit : 100000\n            });\n            console.log({tx});\n        }\n        catch (err) {\n            console.log(err);\n        }\n    }\n\n\n    return (\n        <>\n            {isLoading ? (\n                <SkeletonTotalOrderCard />\n            ) : (\n                <CardWrapper border={false} content={false}>\n                    <Box sx={{ p: 4.25 }}>\n                        <Grid container direction=\"column\">\n                                <Grid container alignItems=\"center\">\n                                    <Grid item>\n                                            <Typography sx={{ fontSize: '1.7rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\n                                                108 ether\n                                            </Typography>\n                                        \n                                    </Grid>\n                                    \n                                    <Grid item xs={12}>\n                                        <Typography\n                                            sx={{\n                                                fontSize: '1.2rem',\n                                                fontWeight: 500,\n                                                color: theme.palette.primary[200]\n                                            }}\n                                        >\n                                            Total Recaudado\n                                        </Typography>\n                                            \n                                    </Grid>\n                                    \n                            </Grid>\n                        </Grid>\n                    </Box>\n                </CardWrapper>\n            )}\n        </>\n    );\n};\n\nDonationCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default DonationCard;\n"]},"metadata":{},"sourceType":"module"}