{"ast":null,"code":"var _jsxFileName = \"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/TFG PLANTILLA GIT/TFGI-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/cliente/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ThemeProvider } from '@mui/material/styles';\nimport { CssBaseline, StyledEngineProvider } from '@mui/material';\nimport Joyride, { STATUS } from 'react-joyride'; // routing\n\nimport Routes from 'routes'; // defaultTheme\n\nimport themes from 'themes'; // project imports\n\nimport NavigationScroll from 'layout/NavigationScroll';\nimport { steps } from \"./views/utilities/Steps\"; // ==============================|| APP ||============================== //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  //const [notDone, setnotDone] = useState(true)\n  //window.localStorage.setItem('notDone', true)\n\n  /* if(localStorage.getItem('notDone') == 'false'){\n      localStorage.setItem('notDone','false');\n  }\n  else {localStorage.setItem('notDone', 'true')}\n  */\n  const customization = useSelector(state => state.customization);\n  return /*#__PURE__*/_jsxDEV(StyledEngineProvider, {\n    injectFirst: true,\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: themes(customization),\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Joyride, {\n        continuous: true //disableOverlay        \n\n        /* callback={(data) => {\n            const { status } = data;\n             if ([STATUS.FINISHED].includes(status) || [STATUS.SKIPPED].includes(status)) {\n                localStorage.setItem('notDone', 'false');\n                setnotDone(false);\n            } \n            \n        }}  */\n        ,\n        scrollToFirstStep: true //el botoncito\n        ,\n        showProgress: true,\n        showSkipButton: true //run = {localStorage.getItem('notDone') == 'true' ? (true):(false)}\n        ,\n        run: true,\n        steps: steps,\n        styles: {\n          options: {\n            zIndex: 10000\n          },\n          buttonClose: {\n            display: 'none'\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NavigationScroll, {\n        children: /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"IpCwiETaEyrNoFSSMPW6QZ3R5/4=\", false, function () {\n  return [useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/TFG PLANTILLA GIT/TFGI-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/cliente/src/App.js"],"names":["React","useState","useSelector","ThemeProvider","CssBaseline","StyledEngineProvider","Joyride","STATUS","Routes","themes","NavigationScroll","steps","App","customization","state","options","zIndex","buttonClose","display"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAiC,OAAjC;AAEA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,WAAT,EAAsBC,oBAAtB,QAAkD,eAAlD;AACA,OAAOC,OAAP,IAAmBC,MAAnB,QAAiC,eAAjC,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CAEA;;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,SAASC,KAAT,QAAsB,yBAAtB,C,CAEA;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd;AAEA;;AACA;AACJ;AACA;AACA;AACA;AACI,QAAMC,aAAa,GAAGX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACD,aAAlB,CAAjC;AAEA,sBACI,QAAC,oBAAD;AAAsB,IAAA,WAAW,MAAjC;AAAA,2BACI,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEJ,MAAM,CAACI,aAAD,CAA5B;AAAA,8BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,OAAD;AACQ,QAAA,UAAU,EAAE,IADpB,CAEQ;;AAEA;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AAXgB;AAaQ,QAAA,iBAAiB,EAAE,IAb3B,CAaiC;AAbjC;AAcQ,QAAA,YAAY,EAAE,IAdtB;AAeQ,QAAA,cAAc,EAAE,IAfxB,CAgBQ;AAhBR;AAiBQ,QAAA,GAAG,EAAI,IAjBf;AAkBQ,QAAA,KAAK,EAAEF,KAlBf;AAmBQ,QAAA,MAAM,EAAE;AACJI,UAAAA,OAAO,EAAE;AACTC,YAAAA,MAAM,EAAE;AADC,WADL;AAIJC,UAAAA,WAAW,EAAE;AACTC,YAAAA,OAAO,EAAE;AADA;AAJT;AAnBhB;AAAA;AAAA;AAAA;AAAA,cAFJ,eA8BI,QAAC,gBAAD;AAAA,+BAEI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cA9BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuCH,CAlDD;;GAAMN,G;UASoBV,W;;;KATpBU,G;AAoDN,eAAeA,GAAf","sourcesContent":["import React, { useState }  from 'react'\n\nimport { useSelector } from 'react-redux';\n\nimport { ThemeProvider } from '@mui/material/styles';\nimport { CssBaseline, StyledEngineProvider } from '@mui/material';\nimport Joyride, {  STATUS } from 'react-joyride';\n\n// routing\nimport Routes from 'routes';\n\n// defaultTheme\nimport themes from 'themes';\n\n// project imports\nimport NavigationScroll from 'layout/NavigationScroll';\nimport { steps } from \"./views/utilities/Steps\";\n\n// ==============================|| APP ||============================== //\n\nconst App = () => {\n    //const [notDone, setnotDone] = useState(true)\n    \n    //window.localStorage.setItem('notDone', true)\n    /* if(localStorage.getItem('notDone') == 'false'){\n        localStorage.setItem('notDone','false');\n    }\n    else {localStorage.setItem('notDone', 'true')}\n */\n    const customization = useSelector((state) => state.customization);\n\n    return (\n        <StyledEngineProvider injectFirst>\n            <ThemeProvider theme={themes(customization)}>\n                <CssBaseline />\n                <Joyride\n                        continuous={true}  \n                        //disableOverlay        \n                        \n                        /* callback={(data) => {\n                            const { status } = data;\n\n                            if ([STATUS.FINISHED].includes(status) || [STATUS.SKIPPED].includes(status)) {\n                                localStorage.setItem('notDone', 'false');\n                                setnotDone(false);\n                            } \n                            \n                        }}  */\n                        scrollToFirstStep={true} //el botoncito\n                        showProgress={true}\n                        showSkipButton={true}\n                        //run = {localStorage.getItem('notDone') == 'true' ? (true):(false)}\n                        run = {true}\n                        steps={steps}\n                        styles={{\n                            options: {\n                            zIndex: 10000,\n                            },\n                            buttonClose: {\n                                display: 'none',\n                            },\n                        }}\n                    />\n                <NavigationScroll>\n                    \n                    <Routes />\n                </NavigationScroll>\n            </ThemeProvider>\n        </StyledEngineProvider>\n    );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}