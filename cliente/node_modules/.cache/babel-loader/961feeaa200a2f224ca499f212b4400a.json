{"ast":null,"code":"var _jsxFileName = \"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/TFG PLANTILLA GIT/TFGI-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/cliente/src/views/pages/tfgInfo/TextCard.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport PropTypes from 'prop-types';\nimport { useState } from 'react'; // material-ui\n\nimport { styled, useTheme } from '@mui/material/styles';\nimport { Avatar, Box, Grid, Menu, MenuItem, Typography } from '@mui/material';\nimport { Header } from 'semantic-ui-react'; // project imports\n\nimport MainCard from 'ui-component/cards/MainCard';\nimport SkeletonEarningCard from 'ui-component/cards/Skeleton/EarningCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CardWrapper = styled(MainCard)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    backgroundColor: theme.palette.secondary.dark,\n    color: '#fff',\n    overflow: 'hidden',\n    position: 'relative'\n  };\n}); // ===========================|| DASHBOARD DEFAULT - EARNING CARD ||=========================== //\n\nconst TextCard = _ref2 => {\n  _s();\n\n  let {\n    isLoading\n  } = _ref2;\n  const theme = useTheme();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(SkeletonEarningCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(CardWrapper, {\n      border: false,\n      content: false,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 4.25\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: timeValue ? /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                fontSize: '2.125rem',\n                fontWeight: 500,\n                mr: 1,\n                mt: 1.75,\n                mb: 0.75\n              },\n              children: \"108\\u20AC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 53\n            }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                fontSize: '2.125rem',\n                fontWeight: 500,\n                mr: 1,\n                mt: 1.75,\n                mb: 0.75\n              },\n              children: \"961\\u20AC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                fontSize: '1rem',\n                fontWeight: 500,\n                color: theme.palette.primary[200]\n              },\n              children: \"Total Recaudado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(Header, {\n            as: \"h2\",\n            color: \"blue\",\n            children: \"Descripci\\xF3n del Proyecto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: 'span',\n            sx: {\n              fontSize: '1.5rem',\n              fontWeight: 500,\n              color: '#3949ab'\n            },\n            align: \"left\",\n            margin: 6,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              color: \"#3949ab\",\n              children: \"Hoy en d\\xEDa, por desgracia a\\xFAn est\\xE1 muy presente la discriminaci\\xF3n en las empresas por sexismo, racismo, homofobia, transfobia, u otras muchas discriminaciones. Esta situaci\\xF3n lleva a casos de mobbing o acoso contra empleados/as.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              color: \"#3949ab\",\n              children: \"\\xBFC\\xF3mo saber antes de entrar si una empresa tiene un historial problem\\xE1tico de discriminaci\\xF3n? Este TFG va a explorar el potencial de la tecnolog\\xEDa blockchain para crear una plataforma transparente y no censurable, que permita a las personas conocer la reputaci\\xF3n de empresas antes de aceptar trabajar para ellas. A trav\\xE9s de esta plataforma, se podr\\xE1n:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              color: \"#3949ab\",\n              children: \"(1) buscar denuncias a entidades por discriminaciones sociales (por edad, g\\xE9nero, etnia, nacionalidad, orientaci\\xF3n sexual, etc)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              color: \"#3949ab\",\n              children: \"(2) realizar denuncias an\\xF3nimas compartiendo relatos sobre situaciones vividas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              color: \"#3949ab\",\n              children: \"(3) aportar informaci\\xF3n de la propia empresa sobre sus esfuerzos para paliar la discriminaci\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              color: \"#3949ab\",\n              children: \"(4) proporcionar la reputaci\\xF3n acumulada de las empresas con la informaci\\xF3n disponible\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(TextCard, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c = TextCard;\nTextCard.propTypes = {\n  isLoading: PropTypes.bool\n};\nexport default TextCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextCard\");","map":{"version":3,"sources":["/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/TFG PLANTILLA GIT/TFGI-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/cliente/src/views/pages/tfgInfo/TextCard.js"],"names":["PropTypes","useState","styled","useTheme","Avatar","Box","Grid","Menu","MenuItem","Typography","Header","MainCard","SkeletonEarningCard","CardWrapper","theme","backgroundColor","palette","secondary","dark","color","overflow","position","TextCard","isLoading","p","timeValue","fontSize","fontWeight","mr","mt","mb","primary","propTypes","bool"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\n\n// material-ui\nimport { styled, useTheme } from '@mui/material/styles';\nimport { Avatar, Box, Grid, Menu, MenuItem, Typography } from '@mui/material';\nimport {  Header } from 'semantic-ui-react'\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport SkeletonEarningCard from 'ui-component/cards/Skeleton/EarningCard';\n\n\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n    backgroundColor: theme.palette.secondary.dark,\n    color: '#fff',\n    overflow: 'hidden',\n    position: 'relative'\n}));\n\n// ===========================|| DASHBOARD DEFAULT - EARNING CARD ||=========================== //\n\nconst TextCard = ({ isLoading }) => {\n    const theme = useTheme();\n\n\n\n    return (\n        <>\n            {isLoading ? (\n                <SkeletonEarningCard />\n            ) : (\n                <CardWrapper border={false} content={false}>\n                    <Box sx={{ p: 4.25 }}>\n                        <Grid container direction=\"column\">\n                        <Grid item>\n                                                {timeValue ? (\n                                                    <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\n                                                        108€\n                                                    </Typography>\n                                                ) : (\n                                                    <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\n                                                        961€\n                                                    </Typography>\n                                                )}\n                                            </Grid>\n                                            \n                                            <Grid item xs={12}>\n                                                <Typography\n                                                    sx={{\n                                                        fontSize: '1rem',\n                                                        fontWeight: 500,\n                                                        color: theme.palette.primary[200]\n                                                    }}\n                                                >\n                                                    Total Recaudado\n                                                </Typography>\n                                            </Grid>\n                            <Header as='h2' color= 'blue'>Descripción del Proyecto</Header>\n                            <Typography \n                                component = {'span'}\n                                sx={{\n                                    fontSize: '1.5rem',\n                                    fontWeight: 500,\n                                    color: '#3949ab'\n                                }}\n                                align='left'\n                                margin = {6}\n                            >\n                                <p></p>\n                                \n                                <p color= '#3949ab'>\n                                    Hoy en día, por desgracia aún está muy presente la discriminación en las empresas por sexismo, racismo, homofobia, transfobia, u otras muchas discriminaciones. Esta situación lleva a casos de mobbing o acoso contra empleados/as. \n                                \n                                </p>\n                                <p color= '#3949ab'>\n                                    ¿Cómo saber antes de entrar si una empresa tiene un historial problemático de discriminación? Este TFG va a explorar el potencial de la tecnología blockchain para crear una plataforma transparente y no censurable, que permita a las personas conocer la reputación de empresas antes de aceptar trabajar para ellas. A través de esta plataforma, se podrán:\n                                </p>\n                                <p color= '#3949ab'>\n                                    (1) buscar denuncias a entidades por discriminaciones sociales (por edad, género, etnia, nacionalidad, orientación sexual, etc)\n                                </p>\n                                <p color= '#3949ab'> \n                                    (2) realizar denuncias anónimas compartiendo relatos sobre situaciones vividas\n                                </p>\n                                <p color= '#3949ab'> \n                                    (3) aportar información de la propia empresa sobre sus esfuerzos para paliar la discriminación\n                                </p>\n                                <p color= '#3949ab'>\n                                    (4) proporcionar la reputación acumulada de las empresas con la información disponible\n                                </p>\n                            </Typography>\n                        </Grid>\n                    </Box>\n                </CardWrapper>\n            )}\n        </>\n    );\n};\n\nTextCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TextCard;\n"]},"metadata":{},"sourceType":"module"}