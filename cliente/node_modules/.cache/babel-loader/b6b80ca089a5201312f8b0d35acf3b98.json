{"ast":null,"code":"var _jsxFileName = \"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/TFG FINAL/TFGI-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/cliente/src/views/pages/tfgInfo/EmpresasCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Member from './Member';\nimport MainCard from 'ui-component/cards/MainCard'; // material-ui\n\nimport { styled } from '@mui/material/styles';\nimport { Box, Grid, Typography } from '@mui/material';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Empresa from './Empresa';\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\nimport { gridSpacing } from 'store/constant'; // project imports\n\nimport SkeletonEarningCard from 'ui-component/cards/Skeleton/EarningCard';\nimport { context } from '../../../contextProvider.js'; // styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CardWrapper = styled(MainCard)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    backgroundColor: theme.palette.secondary.dark,\n    color: '#fff',\n    overflow: 'hidden',\n    position: 'relative',\n    '&:after': {\n      content: '\"\"',\n      position: 'absolute',\n      width: 210,\n      height: 210,\n      background: `linear-gradient(210.04deg, ${theme.palette.warning.dark} -50.94%, rgba(144, 202, 249, 0) 83.49%)`,\n      borderRadius: '50%',\n      top: -30,\n      right: -180\n    },\n    '&:before': {\n      content: '\"\"',\n      position: 'absolute',\n      width: 210,\n      height: 210,\n      background: `linear-gradient(140.9deg, ${theme.palette.warning.dark} -14.02%, rgba(144, 202, 249, 0) 70.50%)`,\n      borderRadius: '50%',\n      top: -160,\n      right: -130\n    }\n  };\n});\nconst useStyles = makeStyles(theme => ({\n  button: {\n    color: '#bbdefb',\n    backgroundColor: '#6495ED'\n  },\n  paper: {\n    padding: theme.spacing(1),\n    margin: 'auto',\n    maxWidth: 1000,\n    backgroundColor: '#fff '\n  }\n})); // ==============================|| DASHBOARD - TOTAL ORDER LINE CHART CARD ||============================== //\n\nconst EmpresasCard = _ref2 => {\n  _s();\n\n  var _Context$empresas;\n\n  let {\n    isLoading\n  } = _ref2;\n  const Context = useContext(context);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(SkeletonEarningCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(CardWrapper, {\n      border: false,\n      content: false,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 4.25\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                fontSize: '2rem',\n                fontWeight: 800,\n                mr: 1,\n                mt: 1.75,\n                mb: 0.75\n              },\n              children: \"Empresas disponibles:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            lg: 2,\n            xs: 28,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: gridSpacing,\n              children: (_Context$empresas = Context.empresas) === null || _Context$empresas === void 0 ? void 0 : _Context$empresas.map(company => /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                lg: 3,\n                children: /*#__PURE__*/_jsxDEV(Empresa, {\n                  nombre: company.nombre_empresa,\n                  foto: company.url_imagen,\n                  link: company.url\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 49\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(EmpresasCard, \"ZQKcZy1e1w/ztUNt/+waOX/TbQs=\");\n\n_c = EmpresasCard;\nexport default EmpresasCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmpresasCard\");","map":{"version":3,"sources":["/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/TFG FINAL/TFGI-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/cliente/src/views/pages/tfgInfo/EmpresasCard.js"],"names":["React","useState","useEffect","useContext","PropTypes","Member","MainCard","styled","Box","Grid","Typography","makeStyles","Empresa","GoogleSpreadsheet","gridSpacing","SkeletonEarningCard","context","CardWrapper","theme","backgroundColor","palette","secondary","dark","color","overflow","position","content","width","height","background","warning","borderRadius","top","right","useStyles","button","paper","padding","spacing","margin","maxWidth","EmpresasCard","isLoading","Context","p","fontSize","fontWeight","mr","mt","mb","empresas","map","company","nombre_empresa","url_imagen","url"],"mappings":"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","sourcesContent":["import React, { useState, useEffect,useContext } from 'react'\n\nimport PropTypes from 'prop-types';\nimport Member from './Member'\nimport MainCard from 'ui-component/cards/MainCard';\n// material-ui\nimport { styled } from '@mui/material/styles';\nimport {  Box, Grid, Typography } from '@mui/material';\nimport { makeStyles } from '@material-ui/core/styles'\nimport Empresa from './Empresa';\nimport {GoogleSpreadsheet} from \"google-spreadsheet\";\nimport { gridSpacing } from 'store/constant';\n\n// project imports\nimport SkeletonEarningCard from 'ui-component/cards/Skeleton/EarningCard';\nimport { context } from '../../../contextProvider.js';\n\n\n\n\n// styles\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n    backgroundColor: theme.palette.secondary.dark,\n    color: '#fff',      \n    overflow: 'hidden',\n    position: 'relative',\n    '&:after': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: `linear-gradient(210.04deg, ${theme.palette.warning.dark} -50.94%, rgba(144, 202, 249, 0) 83.49%)`,\n        borderRadius: '50%',\n        top: -30,\n        right: -180\n    },\n    '&:before': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: `linear-gradient(140.9deg, ${theme.palette.warning.dark} -14.02%, rgba(144, 202, 249, 0) 70.50%)`,\n        borderRadius: '50%',\n        top: -160,\n        right: -130\n    }\n}));\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    button: {\n        color: '#bbdefb' , \n        backgroundColor: '#6495ED'\n    },\n    paper: {\n        padding: theme.spacing(1),\n        margin: 'auto',\n        maxWidth: 1000,\n        backgroundColor: '#fff '\n    },\n  }));\n\n// ==============================|| DASHBOARD - TOTAL ORDER LINE CHART CARD ||============================== //\n\nconst EmpresasCard = ({ isLoading }) => {\n    \n\n    const Context = useContext(context);\n\n    \n\n    return (\n        <>\n        {isLoading ? (\n            <SkeletonEarningCard />\n        ) : (\n             \n                <CardWrapper border={false} content={false}>\n                    <Box sx={{ p: 4.25 }}>\n                        <Grid container direction=\"column\">\n                            <Grid item>\n                                <Typography sx={{ fontSize: '2rem', fontWeight: 800, mr: 1, mt: 1.75, mb: 0.75 }}>\n                                    Empresas disponibles:\n                                </Typography>\n                            </Grid>\n                        </Grid>\n\n                        <Grid container direction=\"column\">\n                            \n                            \n                            <Grid item lg={2} xs={28} md={4}>\n                                <Grid container spacing={gridSpacing}>\n                                        {Context.empresas?.map((company ) => (\n                                                <Grid item lg={3}>\n                                                    <Empresa\n                                                        nombre = {company.nombre_empresa}\n                                                        foto={company.url_imagen}\n                                                        link={company.url}\n                                                    />\n                                                </Grid>\n                                                \n                                                \n                                            ))}\n                                     </Grid>\n                            </Grid>\n                                                \n                            \n\n                        </Grid>\n                       \n                        \n                    </Box>\n                </CardWrapper>)}\n        </>\n            \n    );\n};\n\n\n\nexport default EmpresasCard;\n\n"]},"metadata":{},"sourceType":"module"}