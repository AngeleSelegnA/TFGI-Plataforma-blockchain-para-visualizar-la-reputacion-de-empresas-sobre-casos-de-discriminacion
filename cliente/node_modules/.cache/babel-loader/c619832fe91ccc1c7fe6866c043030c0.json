{"ast":null,"code":"var _jsxFileName = \"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/TFG FINAL/TFGI-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/cliente/src/views/pages/company/HeaderCompany.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport React, { useContext, useState, useEffect } from 'react';\nimport { Typography } from '@mui/material';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Box, Paper, Grid } from '@material-ui/core';\nimport { styled, useTheme } from '@mui/material/styles';\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\nimport { context } from '../../../contextProvider.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(4),\n    //margin: '2rem',\n    backgroundColor: '#fff  '\n  }\n}));\n\nconst HeaderCompany = _ref => {\n  _s();\n\n  var _Context$empresas;\n\n  let {\n    name\n  } = _ref;\n  const classes = useStyles();\n  const theme = useTheme();\n  const Context = useContext(context);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui grid intro\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column center aligned\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              sx: {\n                mb: 0.75\n              },\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                alignItems: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  lg: 9,\n                  xs: 8,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    component: 'span',\n                    sx: {\n                      fontSize: '1.4rem',\n                      fontWeight: 500,\n                      color: theme.palette.secondary.dark\n                    },\n                    align: \"left\",\n                    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                      children: name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 47,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 38,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  lg: 3,\n                  xs: 8,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    children: (_Context$empresas = Context.empresas) === null || _Context$empresas === void 0 ? void 0 : _Context$empresas.filter(company => company.idNombre == name).map(company => /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: company.url_imagen,\n                      alt: \"logo\",\n                      height: \"163\"\n                    }, company.idNombre, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 60,\n                      columnNumber: 33\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, this);\n};\n\n_s(HeaderCompany, \"z+kcnE4cpSpjxyvUar7tZ8jIXgk=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c = HeaderCompany;\nexport default HeaderCompany;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderCompany\");","map":{"version":3,"sources":["/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/TFG FINAL/TFGI-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/cliente/src/views/pages/company/HeaderCompany.js"],"names":["React","useContext","useState","useEffect","Typography","makeStyles","Button","Box","Paper","Grid","styled","useTheme","GoogleSpreadsheet","context","useStyles","theme","paper","padding","spacing","backgroundColor","HeaderCompany","name","classes","Context","mb","fontSize","fontWeight","color","palette","secondary","dark","empresas","filter","company","idNombre","map","url_imagen"],"mappings":"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","sourcesContent":["/* eslint-disable */\n\nimport React, {useContext, useState, useEffect } from 'react'\nimport {  Typography } from '@mui/material';\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button, Box, Paper, Grid} from '@material-ui/core';\nimport { styled, useTheme } from '@mui/material/styles';\nimport {GoogleSpreadsheet} from \"google-spreadsheet\";\nimport { context } from '../../../contextProvider.js';\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(4),\n        //margin: '2rem',\n        backgroundColor:'#fff  ',\n    },\n  }));\n\nconst HeaderCompany = ({ name }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const Context = useContext(context);\n\n\n  return (\n\n  <div>\n    <div className=\"ui grid intro\">\n        <div className=\"row\">\n            <div className=\"column center aligned\">\n\n\n            <Grid container direction=\"column\">\n              <Grid item sx={{ mb: 0.75 }}>\n                <Grid container alignItems=\"center\">\n                  <Grid item lg={9} xs={8}>\n                    <Typography\n                              component = {'span'}\n                              sx={{\n                                  fontSize: '1.4rem',\n                                  fontWeight: 500,\n                                  color: theme.palette.secondary.dark\n                              }}\n                              align='left'\n                          >\n                      <h1 >                 \n                        {name}\n                      </h1>\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={3} xs={8}>\n                    <Box \n                              display=\"flex\" \n                              alignItems=\"center\"\n                              justifyContent=\"center\"\n                          >\n                            {Context.empresas?.filter((company) => ((company.idNombre) == name)).map((company ) => (\n                                              \n                                <img src= {company.url_imagen}\n                                    alt=\"logo\"\n                                    height=\"163\"\n                                    key = {company.idNombre}\n                                />\n                              ))}\n                              \n                    </Box>\n\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n\n            </div>\n        </div>\n    </div>\n     \n  </div>\n\n)\n  }\n\nexport default HeaderCompany\n\n\n"]},"metadata":{},"sourceType":"module"}