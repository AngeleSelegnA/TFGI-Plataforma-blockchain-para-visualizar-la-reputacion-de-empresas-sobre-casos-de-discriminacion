{"ast":null,"code":"var _jsxFileName = \"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/TFG FINAL/TFGI-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/cliente/src/layout/Customization/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'; // material-ui\n\nimport { useTheme } from '@mui/material/styles';\nimport { Drawer, Fab, FormControl, FormControlLabel, Grid, IconButton, Radio, RadioGroup, Slider, Tooltip, Typography } from '@mui/material';\nimport { IconSettings } from '@tabler/icons'; // third-party\n\nimport PerfectScrollbar from 'react-perfect-scrollbar'; // project imports\n\nimport SubCard from 'ui-component/cards/SubCard';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport { SET_BORDER_RADIUS, SET_FONT_FAMILY } from 'store/actions';\nimport { gridSpacing } from 'store/constant'; // concat 'px'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction valueText(value) {\n  return `${value}px`;\n} // ==============================|| LIVE CUSTOMIZATION ||============================== //\n\n\nconst Customization = () => {\n  _s();\n\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const customization = useSelector(state => state.customization); // drawer on/off\n\n  const [open, setOpen] = useState(false);\n\n  const handleToggle = () => {\n    setOpen(!open);\n  }; // state - border radius\n\n\n  const [borderRadius, setBorderRadius] = useState(customization.borderRadius);\n\n  const handleBorderRadius = (event, newValue) => {\n    setBorderRadius(newValue);\n  };\n\n  useEffect(() => {\n    dispatch({\n      type: SET_BORDER_RADIUS,\n      borderRadius\n    });\n  }, [dispatch, borderRadius]);\n  let initialFont;\n\n  switch (customization.fontFamily) {\n    case `'Inter', sans-serif`:\n      initialFont = 'Inter';\n      break;\n\n    case `'Poppins', sans-serif`:\n      initialFont = 'Poppins';\n      break;\n\n    case `'Roboto', sans-serif`:\n    default:\n      initialFont = 'Roboto';\n      break;\n  } // state - font family\n\n\n  const [fontFamily, setFontFamily] = useState(initialFont);\n  useEffect(() => {\n    let newFont;\n\n    switch (fontFamily) {\n      case 'Inter':\n        newFont = `'Inter', sans-serif`;\n        break;\n\n      case 'Poppins':\n        newFont = `'Poppins', sans-serif`;\n        break;\n\n      case 'Roboto':\n      default:\n        newFont = `'Roboto', sans-serif`;\n        break;\n    }\n\n    dispatch({\n      type: SET_FONT_FAMILY,\n      fontFamily: newFont\n    });\n  }, [dispatch, fontFamily]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: \"right\",\n      onClose: handleToggle,\n      open: open,\n      PaperProps: {\n        sx: {\n          width: 280\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n        component: \"div\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: gridSpacing,\n          sx: {\n            p: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(SubCard, {\n              title: \"Font Family\",\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n                  \"aria-label\": \"font-family\",\n                  value: fontFamily,\n                  onChange: e => setFontFamily(e.target.value),\n                  name: \"row-radio-buttons-group\",\n                  children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"Roboto\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 54\n                    }, this),\n                    label: \"Roboto\",\n                    sx: {\n                      '& .MuiSvgIcon-root': {\n                        fontSize: 28\n                      },\n                      '& .MuiFormControlLabel-label': {\n                        color: theme.palette.grey[900]\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"Poppins\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 54\n                    }, this),\n                    label: \"Poppins\",\n                    sx: {\n                      '& .MuiSvgIcon-root': {\n                        fontSize: 28\n                      },\n                      '& .MuiFormControlLabel-label': {\n                        color: theme.palette.grey[900]\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"Inter\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 54\n                    }, this),\n                    label: \"Inter\",\n                    sx: {\n                      '& .MuiSvgIcon-root': {\n                        fontSize: 28\n                      },\n                      '& .MuiFormControlLabel-label': {\n                        color: theme.palette.grey[900]\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(SubCard, {\n              title: \"Border Radius\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                container: true,\n                spacing: 2,\n                alignItems: \"center\",\n                sx: {\n                  mt: 2.5\n                },\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    color: \"secondary\",\n                    children: \"4px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: true,\n                  children: /*#__PURE__*/_jsxDEV(Slider, {\n                    size: \"small\",\n                    value: borderRadius,\n                    onChange: handleBorderRadius,\n                    getAriaValueText: valueText,\n                    valueLabelDisplay: \"on\",\n                    \"aria-labelledby\": \"discrete-slider-small-steps\",\n                    marks: true,\n                    step: 2,\n                    min: 4,\n                    max: 24,\n                    color: \"secondary\",\n                    sx: {\n                      '& .MuiSlider-valueLabel': {\n                        color: 'secondary.light'\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    color: \"secondary\",\n                    children: \"24px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Customization, \"Vudg9C1VYKzJ1WvdHZcf+lwsJ2M=\", false, function () {\n  return [useTheme, useDispatch, useSelector];\n});\n\n_c = Customization;\nexport default Customization;\n\nvar _c;\n\n$RefreshReg$(_c, \"Customization\");","map":{"version":3,"sources":["/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/TFG FINAL/TFGI-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/cliente/src/layout/Customization/index.js"],"names":["useState","useEffect","useDispatch","useSelector","useTheme","Drawer","Fab","FormControl","FormControlLabel","Grid","IconButton","Radio","RadioGroup","Slider","Tooltip","Typography","IconSettings","PerfectScrollbar","SubCard","AnimateButton","SET_BORDER_RADIUS","SET_FONT_FAMILY","gridSpacing","valueText","value","Customization","theme","dispatch","customization","state","open","setOpen","handleToggle","borderRadius","setBorderRadius","handleBorderRadius","event","newValue","type","initialFont","fontFamily","setFontFamily","newFont","sx","width","p","e","target","fontSize","color","palette","grey","mt"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport {\n    Drawer,\n    Fab,\n    FormControl,\n    FormControlLabel,\n    Grid,\n    IconButton,\n    Radio,\n    RadioGroup,\n    Slider,\n    Tooltip,\n    Typography\n} from '@mui/material';\nimport { IconSettings } from '@tabler/icons';\n\n// third-party\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\n// project imports\nimport SubCard from 'ui-component/cards/SubCard';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport { SET_BORDER_RADIUS, SET_FONT_FAMILY } from 'store/actions';\nimport { gridSpacing } from 'store/constant';\n\n// concat 'px'\nfunction valueText(value) {\n    return `${value}px`;\n}\n\n// ==============================|| LIVE CUSTOMIZATION ||============================== //\n\nconst Customization = () => {\n    const theme = useTheme();\n    const dispatch = useDispatch();\n    const customization = useSelector((state) => state.customization);\n\n    // drawer on/off\n    const [open, setOpen] = useState(false);\n    const handleToggle = () => {\n        setOpen(!open);\n    };\n\n    // state - border radius\n    const [borderRadius, setBorderRadius] = useState(customization.borderRadius);\n    const handleBorderRadius = (event, newValue) => {\n        setBorderRadius(newValue);\n    };\n\n    useEffect(() => {\n        dispatch({ type: SET_BORDER_RADIUS, borderRadius });\n    }, [dispatch, borderRadius]);\n\n    let initialFont;\n    switch (customization.fontFamily) {\n        case `'Inter', sans-serif`:\n            initialFont = 'Inter';\n            break;\n        case `'Poppins', sans-serif`:\n            initialFont = 'Poppins';\n            break;\n        case `'Roboto', sans-serif`:\n        default:\n            initialFont = 'Roboto';\n            break;\n    }\n\n    // state - font family\n    const [fontFamily, setFontFamily] = useState(initialFont);\n    useEffect(() => {\n        let newFont;\n        switch (fontFamily) {\n            case 'Inter':\n                newFont = `'Inter', sans-serif`;\n                break;\n            case 'Poppins':\n                newFont = `'Poppins', sans-serif`;\n                break;\n            case 'Roboto':\n            default:\n                newFont = `'Roboto', sans-serif`;\n                break;\n        }\n        dispatch({ type: SET_FONT_FAMILY, fontFamily: newFont });\n    }, [dispatch, fontFamily]);\n\n    return (\n        <>\n\n            <Drawer\n                anchor=\"right\"\n                onClose={handleToggle}\n                open={open}\n                PaperProps={{\n                    sx: {\n                        width: 280\n                    }\n                }}\n            >\n                <PerfectScrollbar component=\"div\">\n                    <Grid container spacing={gridSpacing} sx={{ p: 3 }}>\n                        <Grid item xs={12}>\n                            {/* font family */}\n                            <SubCard title=\"Font Family\">\n                                <FormControl>\n                                    <RadioGroup\n                                        aria-label=\"font-family\"\n                                        value={fontFamily}\n                                        onChange={(e) => setFontFamily(e.target.value)}\n                                        name=\"row-radio-buttons-group\"\n                                    >\n                                        <FormControlLabel\n                                            value=\"Roboto\"\n                                            control={<Radio />}\n                                            label=\"Roboto\"\n                                            sx={{\n                                                '& .MuiSvgIcon-root': { fontSize: 28 },\n                                                '& .MuiFormControlLabel-label': { color: theme.palette.grey[900] }\n                                            }}\n                                        />\n                                        <FormControlLabel\n                                            value=\"Poppins\"\n                                            control={<Radio />}\n                                            label=\"Poppins\"\n                                            sx={{\n                                                '& .MuiSvgIcon-root': { fontSize: 28 },\n                                                '& .MuiFormControlLabel-label': { color: theme.palette.grey[900] }\n                                            }}\n                                        />\n                                        <FormControlLabel\n                                            value=\"Inter\"\n                                            control={<Radio />}\n                                            label=\"Inter\"\n                                            sx={{\n                                                '& .MuiSvgIcon-root': { fontSize: 28 },\n                                                '& .MuiFormControlLabel-label': { color: theme.palette.grey[900] }\n                                            }}\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </SubCard>\n                        </Grid>\n                        <Grid item xs={12}>\n                            {/* border radius */}\n                            <SubCard title=\"Border Radius\">\n                                <Grid item xs={12} container spacing={2} alignItems=\"center\" sx={{ mt: 2.5 }}>\n                                    <Grid item>\n                                        <Typography variant=\"h6\" color=\"secondary\">\n                                            4px\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item xs>\n                                        <Slider\n                                            size=\"small\"\n                                            value={borderRadius}\n                                            onChange={handleBorderRadius}\n                                            getAriaValueText={valueText}\n                                            valueLabelDisplay=\"on\"\n                                            aria-labelledby=\"discrete-slider-small-steps\"\n                                            marks\n                                            step={2}\n                                            min={4}\n                                            max={24}\n                                            color=\"secondary\"\n                                            sx={{\n                                                '& .MuiSlider-valueLabel': {\n                                                    color: 'secondary.light'\n                                                }\n                                            }}\n                                        />\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"h6\" color=\"secondary\">\n                                            24px\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </SubCard>\n                        </Grid>\n                    </Grid>\n                </PerfectScrollbar>\n            </Drawer>\n        </>\n    );\n};\n\nexport default Customization;\n"]},"metadata":{},"sourceType":"module"}