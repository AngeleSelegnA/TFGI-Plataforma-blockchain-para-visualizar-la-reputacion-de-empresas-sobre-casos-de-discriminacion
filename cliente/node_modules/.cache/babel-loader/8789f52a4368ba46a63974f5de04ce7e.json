{"ast":null,"code":"var _jsxFileName = \"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/TFG PLANTILLA GIT/TFGI-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/cliente/src/views/dashboard/Default/index.js\",\n    _s = $RefreshSig$();\n\n// prettier-ignore\t\nimport { useEffect, useState } from 'react';\nimport Web3 from 'web3';\nimport Joyride, { STATUS } from 'react-joyride';\nimport { steps } from \"../../utilities/Steps\"; // material-ui\n\nimport { Grid } from '@mui/material';\nimport { CardGroup } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport * as constants from '../../../constantFile';\nimport complaintContract from '../../../complaintContract.json'; // project imports\n\nimport EarningCard from './EarningCard';\nimport PopularCard from './PopularCard';\nimport TotalIncomeDarkCard from './TotalIncomeDarkCard';\nimport TotalIncomeLightCard from './TotalIncomeLightCard';\nimport { gridSpacing } from 'store/constant';\nimport CompanyItem from './CompanyItem';\nimport Carousel from 'semantic-ui-carousel-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [companies, setCompanies] = useState([]);\n  const [reputation, setReputation] = useState([]); //Variable y setter para mostrar u ocultar la lista de todas las empresas\n  //const [showList, setShowList] = useState(false);\n  //Desplegar lista de empresas\n  // const showListF = () => { setShowList(!showList); };\n\n  const [isLoading, setLoading] = useState(true); //Unimos reputaciones y empresas\n  //const cards = companies.map((e, i) => [e, reputation[i]]);\n\n  useEffect(() => {\n    setLoading(false); //Para conectarse al smart contract\n\n    const infuraUrl = constants.INFURA_URL; //Crea una instancia para comunicarse con el nodo indicado\n\n    const web3 = new Web3(new Web3.providers.HttpProvider(infuraUrl)); //Se conectaria con el contrato\n\n    const contract = new web3.eth.Contract(complaintContract.abi, constants.CONTRACT_ADDRESS); //Obtenemos el array de empresas\n\n    contract.methods.getCompanies().call().then(response => setCompanies(response)); //Obtenemos sus reputaciones\n\n    contract.methods.getReputation().call().then(response => setReputation(response));\n    setLoading(false);\n  }, []);\n  let elements = [{\n    render: () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"ui two column grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(CardGroup, {\n            itemsPerRow: 2,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"column\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(CompanyItem, {\n              name: companies[0],\n              reputation: reputation[0]\n            }, 1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"column\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(CompanyItem, {\n              name: companies[1],\n              reputation: reputation[1]\n            }, 2, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(CardGroup, {\n            itemsPerRow: 2,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"column\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(CompanyItem, {\n              name: companies[0],\n              reputation: reputation[0]\n            }, 1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"column\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(CompanyItem, {\n              name: companies[1],\n              reputation: reputation[1]\n            }, 2, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this);\n    }\n  }, {\n    render: () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"ui two column grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(CardGroup, {\n            itemsPerRow: 2,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"column\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(CompanyItem, {\n              name: companies[2],\n              reputation: reputation[2]\n            }, 3, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"column\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(CompanyItem, {\n              name: companies[3],\n              reputation: reputation[3]\n            }, 4, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(CardGroup, {\n            itemsPerRow: 2,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"column\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(CompanyItem, {\n              name: companies[2],\n              reputation: reputation[2]\n            }, 3, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"column\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(CompanyItem, {\n              name: companies[3],\n              reputation: reputation[3]\n            }, 4, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this);\n    }\n  }, {\n    render: () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"ui two column grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(CardGroup, {\n            itemsPerRow: 2,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"column\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(CompanyItem, {\n              name: companies[4],\n              reputation: reputation[4]\n            }, 5, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"column\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(CompanyItem, {\n              name: companies[5],\n              reputation: reputation[5]\n            }, 6, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(CardGroup, {\n            itemsPerRow: 2,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"column\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(CompanyItem, {\n              name: companies[4],\n              reputation: reputation[4]\n            }, 5, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"column\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(CompanyItem, {\n              name: companies[5],\n              reputation: reputation[5]\n            }, 6, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Joyride, {\n      continuous: true,\n      scrollToFirstStep: true //el botoncito\n      ,\n      showProgress: true,\n      showSkipButton: true,\n      run: true,\n      steps: steps,\n      styles: {\n        buttonClose: {\n          display: 'none'\n        },\n        options: {\n          zIndex: 10000,\n          primaryColor: '#099'\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: gridSpacing,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: gridSpacing,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            lg: 8,\n            md: 6,\n            sm: 6,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(EarningCard, {\n              isLoading: isLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            lg: 4,\n            md: 12,\n            sm: 12,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: gridSpacing,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                sm: 6,\n                xs: 12,\n                md: 6,\n                lg: 12,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"denunciar\",\n                  children: /*#__PURE__*/_jsxDEV(TotalIncomeDarkCard, {\n                    isLoading: isLoading\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                sm: 6,\n                xs: 12,\n                md: 6,\n                lg: 12,\n                children: /*#__PURE__*/_jsxDEV(TotalIncomeLightCard, {\n                  isLoading: isLoading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: gridSpacing,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            lg: 8,\n            md: 12,\n            sm: 12,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empresa\",\n              children: /*#__PURE__*/_jsxDEV(Carousel, {\n                isLoading: isLoading,\n                elements: elements,\n                duration: 3000,\n                animation: \"slide left\",\n                showNextPrev: false,\n                showIndicators: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(PopularCard, {\n              isLoading: isLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"r8DwREomBt6fGdbMdLRbqNOUtCM=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/TFG PLANTILLA GIT/TFGI-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/cliente/src/views/dashboard/Default/index.js"],"names":["useEffect","useState","Web3","Joyride","STATUS","steps","Grid","CardGroup","constants","complaintContract","EarningCard","PopularCard","TotalIncomeDarkCard","TotalIncomeLightCard","gridSpacing","CompanyItem","Carousel","Dashboard","companies","setCompanies","reputation","setReputation","isLoading","setLoading","infuraUrl","INFURA_URL","web3","providers","HttpProvider","contract","eth","Contract","abi","CONTRACT_ADDRESS","methods","getCompanies","call","then","response","getReputation","elements","render","buttonClose","display","options","zIndex","primaryColor"],"mappings":"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","sourcesContent":["// prettier-ignore\t\nimport { useEffect, useState } from 'react';\nimport Web3 from 'web3';\nimport Joyride, {  STATUS } from 'react-joyride';\nimport { steps } from \"../../utilities/Steps\";\n\n// material-ui\nimport { Grid } from '@mui/material';\nimport {CardGroup } from 'semantic-ui-react';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport * as constants from '../../../constantFile';\nimport complaintContract from '../../../complaintContract.json';\n\n// project imports\nimport EarningCard from './EarningCard';\nimport PopularCard from './PopularCard';\nimport TotalIncomeDarkCard from './TotalIncomeDarkCard';\nimport TotalIncomeLightCard from './TotalIncomeLightCard';\nimport { gridSpacing } from 'store/constant';\nimport CompanyItem from './CompanyItem';\nimport Carousel from 'semantic-ui-carousel-react';\n\nconst Dashboard = () => {\n    const [companies, setCompanies] = useState([]);\n    const [reputation, setReputation] = useState([]);\n    //Variable y setter para mostrar u ocultar la lista de todas las empresas\n    //const [showList, setShowList] = useState(false);\n    //Desplegar lista de empresas\n   // const showListF = () => { setShowList(!showList); };\n    const [isLoading, setLoading] = useState(true);\n    //Unimos reputaciones y empresas\n    //const cards = companies.map((e, i) => [e, reputation[i]]);\n\n    useEffect(() => {\n        setLoading(false);\n         //Para conectarse al smart contract\n         const infuraUrl = constants.INFURA_URL;\n\n         //Crea una instancia para comunicarse con el nodo indicado\n         const web3 = new Web3(new Web3.providers.HttpProvider(infuraUrl));\n \n         //Se conectaria con el contrato\n         const contract = new web3.eth.Contract(complaintContract.abi, constants.CONTRACT_ADDRESS);\n \n         //Obtenemos el array de empresas\n         contract.methods.getCompanies().call().then(response => setCompanies(response));\n         \n         //Obtenemos sus reputaciones\n         contract.methods.getReputation().call().then(response => setReputation(response));\n         setLoading(false);\n    }, []);\n\n\n\n    let  elements  = [\n\t\t{\n            \n            render:()=>{\n                return (\n                    <div class=\"ui two column grid\">\n                    <div className=\"row\">\n                        <CardGroup itemsPerRow={2}>\n                        <div className=\"column\"></div>\n                        <CompanyItem key={1} name={companies[0]} reputation={reputation[0]}/>\n                        <div className=\"column\"></div>\n                        <CompanyItem key={2} name={companies[1]} reputation={reputation[1]}/>\n                        </CardGroup>\n                    </div>\n                    <div className=\"row\">\n                        <CardGroup itemsPerRow={2}>\n                        <div className=\"column\"></div>\n                        <CompanyItem key={1} name={companies[0]} reputation={reputation[0]}/>\n                        <div className=\"column\"></div>\n                        <CompanyItem key={2} name={companies[1]} reputation={reputation[1]}/>\n                        </CardGroup>\n                    </div>\n                    \n                    </div>\n            \n                )\n            }\n            \n\t\t},\n\n        {\n            render:()=>{\n                return (\n                    <div class=\"ui two column grid\">\n                    <div className=\"row\">\n                        <CardGroup itemsPerRow={2}>\n                        <div className=\"column\"></div>\n                        <CompanyItem key={3} name={companies[2]} reputation={reputation[2]}/>\n                        <div className=\"column\"></div>\n                        <CompanyItem key={4} name={companies[3]} reputation={reputation[3]}/>\n            \n                        </CardGroup>\n                    </div>\n                    <div className=\"row\">\n                        <CardGroup itemsPerRow={2}>\n                        <div className=\"column\"></div>\n                        <CompanyItem key={3} name={companies[2]} reputation={reputation[2]}/>\n                        <div className=\"column\"></div>\n                        <CompanyItem key={4} name={companies[3]} reputation={reputation[3]}/>\n            \n                        </CardGroup>\n                    </div>\n                    \n                    </div>\n            \n                )\n            }\n        },\n        {\n            render:()=>{\n                return (\n                    <div class=\"ui two column grid\">\n                    <div className=\"row\">\n                        <CardGroup itemsPerRow={2}>\n                        <div className=\"column\"></div>\n                        <CompanyItem key={5} name={companies[4]} reputation={reputation[4]}/>\n                        <div className=\"column\"></div>\n                        <CompanyItem key={6} name={companies[5]} reputation={reputation[5]}/>\n                        </CardGroup>\n                    </div>\n                    <div className=\"row\">\n                        <CardGroup itemsPerRow={2}>\n                        <div className=\"column\"></div>\n                        <CompanyItem key={5} name={companies[4]} reputation={reputation[4]}/>\n                        <div className=\"column\"></div>\n                        <CompanyItem key={6} name={companies[5]} reputation={reputation[5]}/>\n                        </CardGroup>\n                    </div>\n                    \n                    </div>\n            \n                )\n            }\n        }\n\t]\n\n    return (\n        <div>\n            <Joyride\n                continuous={true}  \n                scrollToFirstStep={true} //el botoncito\n                showProgress={true}\n                showSkipButton={true}\n                run = {true}\n                steps={steps}\n                styles={{\n                    \n                    buttonClose: {\n                        display: 'none',\n                    },\n                    options: {\n                        zIndex: 10000,\n                        primaryColor: '#099',\n                      },\n                }}\n            />\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12}>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item lg={8} md={6} sm={6} xs={12}>\n                        <EarningCard isLoading={isLoading} />\n                    </Grid>\n                    {/* <Grid item lg={4} md={6} sm={6} xs={12}>\n                        <TotalOrderLineChartCard isLoading={isLoading} />\n                    </Grid> */}\n                    <Grid item lg={4} md={12} sm={12} xs={12}>\n                        <Grid container spacing={gridSpacing}>\n                            <Grid item sm={6} xs={12} md={6} lg={12}>\n                                <div className = \"denunciar\">\n                                    <TotalIncomeDarkCard isLoading={isLoading} />\n                                </div>\n                            </Grid>\n                            <Grid item sm={6} xs={12} md={6} lg={12}> \n                                <TotalIncomeLightCard isLoading={isLoading} />  \n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item lg={8} md={12} sm={12} xs={12}>\n                        {/*añadir sino aqui los tops en vez de empresas y poner un boton ver empresas*/}\n                        <div className = \"empresa\">\n                            <Carousel \n                            isLoading={isLoading}\n                            elements = {elements}\n                            duration ={3000}\n                            animation = 'slide left'\n                            showNextPrev = {false}\n                            showIndicators = {true}   \n                            />\n                        </div>\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                        <PopularCard isLoading={isLoading} />\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n        </div>\n    );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}