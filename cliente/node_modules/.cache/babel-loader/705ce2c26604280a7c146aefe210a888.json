{"ast":null,"code":"import equal from '@gilbarbara/deep-equal';\nimport is from 'is-lite';\nimport { compareNumbers, compareValues, getIterables, includesOrEqualsTo, nested } from './helpers';\nexport default function treeChanges(previousData, data) {\n  if ([previousData, data].some(is.nullOrUndefined)) {\n    throw new Error('Missing required parameters');\n  }\n\n  if (![previousData, data].every(function (d) {\n    return is.plainObject(d) || is.array(d);\n  })) {\n    throw new Error('Expected plain objects or array');\n  }\n\n  var added = function (key, value) {\n    try {\n      return compareValues(previousData, data, {\n        key: key,\n        type: 'added',\n        value: value\n      });\n    } catch (_a) {\n      /* istanbul ignore next */\n      return false;\n    }\n  };\n\n  var changed = function (key, actual, previous) {\n    try {\n      var left = nested(previousData, key);\n      var right = nested(data, key);\n      var hasActual = is.defined(actual);\n      var hasPrevious = is.defined(previous);\n\n      if (hasActual || hasPrevious) {\n        var leftComparator = hasPrevious ? includesOrEqualsTo(previous, left) : !includesOrEqualsTo(actual, left);\n        var rightComparator = includesOrEqualsTo(actual, right);\n        return leftComparator && rightComparator;\n      }\n\n      if ([left, right].every(is.array) || [left, right].every(is.plainObject)) {\n        return !equal(left, right);\n      }\n\n      return left !== right;\n    } catch (_a) {\n      /* istanbul ignore next */\n      return false;\n    }\n  };\n\n  var changedFrom = function (key, previous, actual) {\n    if (!is.defined(key)) {\n      return false;\n    }\n\n    try {\n      var left = nested(previousData, key);\n      var right = nested(data, key);\n      var hasActual = is.defined(actual);\n      return includesOrEqualsTo(previous, left) && (hasActual ? includesOrEqualsTo(actual, right) : !hasActual);\n    } catch (_a) {\n      /* istanbul ignore next */\n      return false;\n    }\n  };\n  /**\n   * @deprecated\n   * Use \"changed\" instead\n   */\n\n\n  var changedTo = function (key, actual) {\n    if (!is.defined(key)) {\n      return false;\n    }\n    /* istanbul ignore next */\n\n\n    if (process.env.NODE_ENV === 'development') {\n      // eslint-disable-next-line no-console\n      console.warn('`changedTo` is deprecated! Replace it with `change`');\n    }\n\n    return changed(key, actual);\n  };\n\n  var decreased = function (key, actual, previous) {\n    if (!is.defined(key)) {\n      return false;\n    }\n\n    try {\n      return compareNumbers(previousData, data, {\n        key: key,\n        actual: actual,\n        previous: previous,\n        type: 'decreased'\n      });\n    } catch (_a) {\n      /* istanbul ignore next */\n      return false;\n    }\n  };\n\n  var emptied = function (key) {\n    try {\n      var _a = getIterables(previousData, data, {\n        key: key\n      }),\n          left = _a[0],\n          right = _a[1];\n\n      return !!left.length && !right.length;\n    } catch (_b) {\n      /* istanbul ignore next */\n      return false;\n    }\n  };\n\n  var filled = function (key) {\n    try {\n      var _a = getIterables(previousData, data, {\n        key: key\n      }),\n          left = _a[0],\n          right = _a[1];\n\n      return !left.length && !!right.length;\n    } catch (_b) {\n      /* istanbul ignore next */\n      return false;\n    }\n  };\n\n  var increased = function (key, actual, previous) {\n    if (!is.defined(key)) {\n      return false;\n    }\n\n    try {\n      return compareNumbers(previousData, data, {\n        key: key,\n        actual: actual,\n        previous: previous,\n        type: 'increased'\n      });\n    } catch (_a) {\n      /* istanbul ignore next */\n      return false;\n    }\n  };\n\n  var removed = function (key, value) {\n    try {\n      return compareValues(previousData, data, {\n        key: key,\n        type: 'removed',\n        value: value\n      });\n    } catch (_a) {\n      /* istanbul ignore next */\n      return false;\n    }\n  };\n\n  return {\n    added: added,\n    changed: changed,\n    changedFrom: changedFrom,\n    changedTo: changedTo,\n    decreased: decreased,\n    emptied: emptied,\n    filled: filled,\n    increased: increased,\n    removed: removed\n  };\n}\nexport * from './types';","map":{"version":3,"mappings":"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","names":["equal","is","compareNumbers","compareValues","getIterables","includesOrEqualsTo","nested","treeChanges","previousData","data","some","nullOrUndefined","Error","every","plainObject","d","array","added","key","value","type","changed","actual","previous","left","right","hasActual","defined","hasPrevious","leftComparator","rightComparator","changedFrom","changedTo","process","env","NODE_ENV","console","warn","decreased","emptied","length","filled","increased","removed"],"sourceRoot":"","sources":["../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}