{"ast":null,"code":"var _jsxFileName = \"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/TFG FINAL/TFGI-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/cliente/src/views/dashboard/Default/RankingComponent.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types'; // material-ui\n\nimport { useTheme, styled } from '@mui/material/styles'; // project imports\n\nimport RankingItem from './RankingItem';\nimport { Grid, Typography } from '@mui/material';\nimport TotalIncomeCard from 'ui-component/cards/Skeleton/TotalIncomeCard';\nimport MainCard from 'ui-component/cards/MainCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CardWrapper = styled(MainCard)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    backgroundColor: theme.palette.primary.light,\n    color: theme.palette.grey[900],\n    overflow: 'hidden',\n    position: 'center'\n  };\n});\n\nconst RankingComponent = _ref2 => {\n  _s();\n\n  let {\n    isLoading,\n    titulo,\n    companies\n  } = _ref2;\n  const theme = useTheme();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(TotalIncomeCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(CardWrapper, {\n      border: false,\n      content: false,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 0.5,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          align: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            alignItems: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              align: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  fontSize: '1.50rem',\n                  fontWeight: 700,\n                  mr: 2.75,\n                  mt: 1.75,\n                  mb: 0.75\n                },\n                children: titulo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 0.5,\n          children: companies.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              sm: 6,\n              xs: 12,\n              md: 6,\n              lg: 12,\n              children: /*#__PURE__*/_jsxDEV(RankingItem, {\n                isLoading: isLoading,\n                name: item[0],\n                reputation: item[1],\n                number: index\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(RankingComponent, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c = RankingComponent;\nRankingComponent.propTypes = {\n  isLoading: PropTypes.bool\n};\nexport default RankingComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"RankingComponent\");","map":{"version":3,"sources":["/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/TFG FINAL/TFGI-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/cliente/src/views/dashboard/Default/RankingComponent.js"],"names":["PropTypes","useTheme","styled","RankingItem","Grid","Typography","TotalIncomeCard","MainCard","CardWrapper","theme","backgroundColor","palette","primary","light","color","grey","overflow","position","RankingComponent","isLoading","titulo","companies","fontSize","fontWeight","mr","mt","mb","map","item","index","propTypes","bool"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\n\n// material-ui\nimport { useTheme, styled } from '@mui/material/styles';\n\n// project imports\nimport RankingItem from './RankingItem';\nimport { Grid, Typography } from '@mui/material';\nimport TotalIncomeCard from 'ui-component/cards/Skeleton/TotalIncomeCard';\nimport MainCard from 'ui-component/cards/MainCard';\n\n\n\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n    backgroundColor: theme.palette.primary.light,\n    color: theme.palette.grey[900],\n    overflow: 'hidden',\n    position: 'center'\n}));\n\nconst RankingComponent = ({ isLoading, titulo, companies }) => {\n    const theme = useTheme();\n\n\n    return (\n        <>\n            {isLoading ? (\n                <TotalIncomeCard />\n            ) : (\n                <CardWrapper border={false} content={false}>\n                <Grid container spacing={0.5} alignItems=\"center\">\n                    <Grid item align=\"center\">\n                        <Grid container alignItems=\"center\">\n                            <Grid item align=\"center\">\n                                <Typography sx={{ fontSize: '1.50rem', fontWeight: 700, mr: 2.75, mt: 1.75, mb: 0.75 }}>\n                                    {titulo}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                    <Grid container spacing={0.5}>\n                        {companies.map((item, index) => { \n                            return( <Grid item sm={6} xs={12} md={6} lg={12}>\n                                        <RankingItem isLoading= {isLoading} name={item[0]} reputation={item[1]} number={index}/>\n                                    </Grid>)})}\n                    </Grid>\n                    </Grid>\n                </CardWrapper>\n            )}\n        </>\n    );\n};\n\nRankingComponent.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default RankingComponent;\n"]},"metadata":{},"sourceType":"module"}