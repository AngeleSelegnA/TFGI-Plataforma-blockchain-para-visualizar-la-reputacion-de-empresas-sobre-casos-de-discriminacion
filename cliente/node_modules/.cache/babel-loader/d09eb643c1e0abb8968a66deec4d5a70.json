{"ast":null,"code":"var _jsxFileName = \"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/TFG PLANTILLA GIT/TFGI-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/cliente/src/views/pages/company/CircularGraph.js\";\nimport React from 'react';\nimport { PieChart, Pie, Legend, Cell, Tooltip } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RADIAN = Math.PI / 180;\nconst COLORES = ['#7fb3d5', '#2980b9', '#1f618d', '#154360'];\nconst data01 = [{\n  \"name\": \"Mujeres\",\n  \"value\": 400\n}, {\n  \"name\": \"Hombres\",\n  \"value\": 300\n}, {\n  \"name\": \"No binario\",\n  \"value\": 300\n}, {\n  \"name\": \"Otros\",\n  \"value\": 200\n}];\n\nconst renderCustomizedLabel = _ref => {\n  let {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    percent,\n    index\n  } = _ref;\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n  return /*#__PURE__*/_jsxDEV(\"text\", {\n    x: x,\n    y: y,\n    fill: \"white\",\n    textAnchor: x > cx ? 'start' : 'end',\n    dominantBaseline: \"central\",\n    children: `${(percent * 100).toFixed(0)}%`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }, this);\n};\n\nexport default function CircularGraph() {\n  return /*#__PURE__*/_jsxDEV(PieChart, {\n    width: 400,\n    height: 400,\n    children: [/*#__PURE__*/_jsxDEV(Pie, {\n      data: data01,\n      cx: \"50%\",\n      cy: \"50%\",\n      labelLine: false,\n      label: renderCustomizedLabel,\n      outerRadius: 80,\n      fill: \"#5dade2\",\n      dataKey: \"value\",\n      children: data01.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n        fill: COLORES[index % COLORES.length]\n      }, `cell-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {\n      align: \"left\",\n      verticalAlign: \"middle\",\n      width: \"33.3%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_c = CircularGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"CircularGraph\");","map":{"version":3,"sources":["/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/TFG PLANTILLA GIT/TFGI-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/cliente/src/views/pages/company/CircularGraph.js"],"names":["React","PieChart","Pie","Legend","Cell","Tooltip","RADIAN","Math","PI","COLORES","data01","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","index","radius","x","cos","y","sin","toFixed","CircularGraph","map","entry","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACIC,QADJ,EAEIC,GAFJ,EAGIC,MAHJ,EAIIC,IAJJ,EAKIC,OALJ,QAMO,UANP;;AAOA,MAAMC,MAAM,GAAGC,IAAI,CAACC,EAAL,GAAU,GAAzB;AAEA,MAAMC,OAAO,GAAG,CAAE,SAAF,EAAc,SAAd,EAA0B,SAA1B,EAAsC,SAAtC,CAAhB;AAEA,MAAMC,MAAM,GAAG,CACX;AACE,UAAQ,SADV;AAEE,WAAS;AAFX,CADW,EAKX;AACE,UAAQ,SADV;AAEE,WAAS;AAFX,CALW,EASX;AACE,UAAQ,YADV;AAEE,WAAS;AAFX,CATW,EAaX;AACE,UAAQ,OADV;AAEE,WAAS;AAFX,CAbW,CAAf;;AAkBE,MAAMC,qBAAqB,GAAG,QAAoE;AAAA,MAAnE;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,EAAN;AAAUC,IAAAA,QAAV;AAAoBC,IAAAA,WAApB;AAAiCC,IAAAA,WAAjC;AAA8CC,IAAAA,OAA9C;AAAuDC,IAAAA;AAAvD,GAAmE;AAChG,QAAMC,MAAM,GAAGJ,WAAW,GAAG,CAACC,WAAW,GAAGD,WAAf,IAA8B,GAA3D;AACA,QAAMK,CAAC,GAAGR,EAAE,GAAGO,MAAM,GAAGZ,IAAI,CAACc,GAAL,CAAS,CAACP,QAAD,GAAYR,MAArB,CAAxB;AACA,QAAMgB,CAAC,GAAGT,EAAE,GAAGM,MAAM,GAAGZ,IAAI,CAACgB,GAAL,CAAS,CAACT,QAAD,GAAYR,MAArB,CAAxB;AAEA,sBACE;AAAM,IAAA,CAAC,EAAEc,CAAT;AAAY,IAAA,CAAC,EAAEE,CAAf;AAAkB,IAAA,IAAI,EAAC,OAAvB;AAA+B,IAAA,UAAU,EAAEF,CAAC,GAAGR,EAAJ,GAAS,OAAT,GAAmB,KAA9D;AAAqE,IAAA,gBAAgB,EAAC,SAAtF;AAAA,cACI,GAAE,CAACK,OAAO,GAAG,GAAX,EAAgBO,OAAhB,CAAwB,CAAxB,CAA2B;AADjC;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAVD;;AAaF,eAAe,SAASC,aAAT,GAAyB;AAGtC,sBAEE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAE,GAAjB;AAAsB,IAAA,MAAM,EAAE,GAA9B;AAAA,4BACA,QAAC,GAAD;AACI,MAAA,IAAI,EAAEf,MADV;AAEI,MAAA,EAAE,EAAC,KAFP;AAGI,MAAA,EAAE,EAAC,KAHP;AAII,MAAA,SAAS,EAAE,KAJf;AAKI,MAAA,KAAK,EAAEC,qBALX;AAMI,MAAA,WAAW,EAAE,EANjB;AAOI,MAAA,IAAI,EAAC,SAPT;AAQI,MAAA,OAAO,EAAC,OARZ;AAAA,gBAUKD,MAAM,CAACgB,GAAP,CAAW,CAACC,KAAD,EAAQT,KAAR,kBACI,QAAC,IAAD;AAEI,QAAA,IAAI,EAAET,OAAO,CAACS,KAAK,GAAGT,OAAO,CAACmB,MAAjB;AAFjB,SACU,QAAOV,KAAM,EADvB;AAAA;AAAA;AAAA;AAAA,cADf;AAVL;AAAA;AAAA;AAAA;AAAA,YADA,eAmBE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,aAAa,EAAC,QAAnC;AAA4C,MAAA,KAAK,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,YAnBF,eAoBE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAyBD;KA5BuBO,a","sourcesContent":["import React from 'react'\n\nimport {\n    PieChart,\n    Pie,\n    Legend,\n    Cell,\n    Tooltip\n} from 'recharts'\nconst RADIAN = Math.PI / 180;\n\nconst COLORES = [ '#7fb3d5' , '#2980b9' , '#1f618d' , '#154360' ];\n\nconst data01 = [\n    {\n      \"name\": \"Mujeres\",\n      \"value\": 400\n    },\n    {\n      \"name\": \"Hombres\",\n      \"value\": 300\n    },\n    {\n      \"name\": \"No binario\",\n      \"value\": 300\n    },\n    {\n      \"name\": \"Otros\",\n      \"value\": 200\n    }\n  ];\n  const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n  \n    return (\n      <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n        {`${(percent * 100).toFixed(0)}%`}\n      </text>\n    );\n  };      \n\n\nexport default function CircularGraph() {\n\n\n  return (\n  \n    <PieChart width={400} height={400}>\n    <Pie\n        data={data01}\n        cx=\"50%\"\n        cy=\"50%\"\n        labelLine={false}\n        label={renderCustomizedLabel}\n        outerRadius={80}\n        fill=\"#5dade2\"\n        dataKey=\"value\"\n      >\n        {data01.map((entry, index) => (\n                        <Cell\n                            key={`cell-${index}`}\n                            fill={COLORES[index % COLORES.length]}\n                            \n                        />\n                    ))}\n      </Pie>\n      <Legend align=\"left\" verticalAlign=\"middle\" width=\"33.3%\" />\n      <Tooltip />\n    </PieChart>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}