{"ast":null,"code":"var _jsxFileName = \"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/TFG FINAL/TFGI-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/cliente/src/views/pages/company/CircularGraph.js\";\nimport React from 'react';\nimport { PieChart, Pie, Legend, Cell, Tooltip } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RADIAN = Math.PI / 180;\n\nconst renderCustomizedLabel = _ref => {\n  let {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    percent,\n    index\n  } = _ref;\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n  return /*#__PURE__*/_jsxDEV(\"text\", {\n    x: x,\n    y: y,\n    fill: \"white\",\n    textAnchor: x > cx ? 'start' : 'end',\n    dominantBaseline: \"central\",\n    children: `${(percent * 100).toFixed(0)}%`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\nexport default function CircularGraph(_ref2) {\n  let {\n    data,\n    colores,\n    ancho,\n    alto,\n    tipo\n  } = _ref2;\n  //LOS DATOS QUE SE LLEGAN SON DE LA FORMA [{ \"category\" : .... , \"value\" : x}]\n  let fixedData = [];\n\n  for (let d of data) {\n    fixedData.push({\n      \"name\": d.category.charAt(0).toUpperCase() + d.category.slice(1),\n      \"value\": d.value\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(PieChart, {\n    width: ancho,\n    height: alto,\n    children: [/*#__PURE__*/_jsxDEV(Pie, {\n      data: fixedData,\n      cx: \"50%\",\n      cy: \"50%\",\n      labelLine: false,\n      label: renderCustomizedLabel,\n      outerRadius: 80,\n      fill: \"#5dade2\",\n      dataKey: \"value\",\n      children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n        fill: colores[index % colores.length]\n      }, `cell-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {\n      align: \"left\",\n      verticalAlign: \"middle\",\n      width: \"33.3%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_c = CircularGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"CircularGraph\");","map":{"version":3,"sources":["/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/TFG FINAL/TFGI-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/cliente/src/views/pages/company/CircularGraph.js"],"names":["React","PieChart","Pie","Legend","Cell","Tooltip","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","index","radius","x","cos","y","sin","toFixed","CircularGraph","data","colores","ancho","alto","tipo","fixedData","d","push","category","charAt","toUpperCase","slice","value","map","entry","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SACIC,QADJ,EAEIC,GAFJ,EAGIC,MAHJ,EAIIC,IAJJ,EAKIC,OALJ,QAMO,UANP;;AAOA,MAAMC,MAAM,GAAGC,IAAI,CAACC,EAAL,GAAU,GAAzB;;AAEA,MAAMC,qBAAqB,GAAG,QAAoE;AAAA,MAAnE;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,EAAN;AAAUC,IAAAA,QAAV;AAAoBC,IAAAA,WAApB;AAAiCC,IAAAA,WAAjC;AAA8CC,IAAAA,OAA9C;AAAuDC,IAAAA;AAAvD,GAAmE;AAChG,QAAMC,MAAM,GAAGJ,WAAW,GAAG,CAACC,WAAW,GAAGD,WAAf,IAA8B,GAA3D;AACA,QAAMK,CAAC,GAAGR,EAAE,GAAGO,MAAM,GAAGV,IAAI,CAACY,GAAL,CAAS,CAACP,QAAD,GAAYN,MAArB,CAAxB;AACA,QAAMc,CAAC,GAAGT,EAAE,GAAGM,MAAM,GAAGV,IAAI,CAACc,GAAL,CAAS,CAACT,QAAD,GAAYN,MAArB,CAAxB;AAEA,sBACE;AAAM,IAAA,CAAC,EAAEY,CAAT;AAAY,IAAA,CAAC,EAAEE,CAAf;AAAkB,IAAA,IAAI,EAAC,OAAvB;AAA+B,IAAA,UAAU,EAAEF,CAAC,GAAGR,EAAJ,GAAS,OAAT,GAAmB,KAA9D;AAAqE,IAAA,gBAAgB,EAAC,SAAtF;AAAA,cACI,GAAE,CAACK,OAAO,GAAG,GAAX,EAAgBO,OAAhB,CAAwB,CAAxB,CAA2B;AADjC;AAAA;AAAA;AAAA;AAAA,UADF;AAKC,CAVH;;AAaA,eAAe,SAASC,aAAT,QAA6D;AAAA,MAAtC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAkBC,IAAAA,KAAlB;AAAyBC,IAAAA,IAAzB;AAA+BC,IAAAA;AAA/B,GAAsC;AAE1E;AACA,MAAIC,SAAS,GAAG,EAAhB;;AACA,OAAI,IAAIC,CAAR,IAAaN,IAAb,EAAkB;AAChBK,IAAAA,SAAS,CAACE,IAAV,CAAe;AACb,cAASD,CAAC,CAACE,QAAF,CAAWC,MAAX,CAAkB,CAAlB,EAAqBC,WAArB,KAAqCJ,CAAC,CAACE,QAAF,CAAWG,KAAX,CAAiB,CAAjB,CADjC;AAEb,eAASL,CAAC,CAACM;AAFE,KAAf;AAID;;AAED,sBAEE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEV,KAAjB;AAAwB,IAAA,MAAM,EAAEC,IAAhC;AAAA,4BACA,QAAC,GAAD;AACI,MAAA,IAAI,EAAEE,SADV;AAEI,MAAA,EAAE,EAAC,KAFP;AAGI,MAAA,EAAE,EAAC,KAHP;AAII,MAAA,SAAS,EAAE,KAJf;AAKI,MAAA,KAAK,EAAEpB,qBALX;AAMI,MAAA,WAAW,EAAE,EANjB;AAOI,MAAA,IAAI,EAAC,SAPT;AAQI,MAAA,OAAO,EAAC,OARZ;AAAA,gBAUKe,IAAI,CAACa,GAAL,CAAS,CAACC,KAAD,EAAQtB,KAAR,kBACM,QAAC,IAAD;AAEI,QAAA,IAAI,EAAES,OAAO,CAACT,KAAK,GAAGS,OAAO,CAACc,MAAjB;AAFjB,SACU,QAAOvB,KAAM,EADvB;AAAA;AAAA;AAAA;AAAA,cADf;AAVL;AAAA;AAAA;AAAA;AAAA,YADA,eAkBE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,aAAa,EAAC,QAAnC;AAA4C,MAAA,KAAK,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,YAlBF,eAmBE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAwBD;KAnCuBO,a","sourcesContent":["import React from 'react'\n\n\nimport {\n    PieChart,\n    Pie,\n    Legend,\n    Cell,\n    Tooltip\n} from 'recharts'\nconst RADIAN = Math.PI / 180;\n\nconst renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n  \n  return (\n    <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n      {`${(percent * 100).toFixed(0)}%`}\n      </text>\n    );\n  };      \n\n\nexport default function CircularGraph({ data, colores , ancho, alto, tipo}) {\n\n  //LOS DATOS QUE SE LLEGAN SON DE LA FORMA [{ \"category\" : .... , \"value\" : x}]\n  let fixedData = []\n  for(let d of data){\n    fixedData.push({\n      \"name\" : d.category.charAt(0).toUpperCase() + d.category.slice(1),\n      \"value\": d.value\n    })\n  }\n\n  return (\n  \n    <PieChart width={ancho} height={alto}>\n    <Pie\n        data={fixedData}\n        cx=\"50%\"\n        cy=\"50%\"\n        labelLine={false}\n        label={renderCustomizedLabel}\n        outerRadius={80}\n        fill=\"#5dade2\"\n        dataKey=\"value\"\n      >\n        {data.map((entry, index) => (\n                        <Cell\n                            key={`cell-${index}`}\n                            fill={colores[index % colores.length]}\n                        />\n                    ))}\n      </Pie>\n      <Legend align=\"left\" verticalAlign=\"middle\" width=\"33.3%\" />\n      <Tooltip />\n    </PieChart>\n  );\n}"]},"metadata":{},"sourceType":"module"}