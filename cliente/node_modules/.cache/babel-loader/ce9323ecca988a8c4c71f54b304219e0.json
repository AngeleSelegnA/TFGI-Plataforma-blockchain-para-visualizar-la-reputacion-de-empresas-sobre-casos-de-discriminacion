{"ast":null,"code":"var _jsxFileName = \"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/TFG FINAL/TFGI-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/cliente/src/views/pages/company/index.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { NavLink, useParams } from 'react-router-dom';\nimport { context } from '../../../contextProvider.js';\nimport MaterialTable, { MTableToolbar, MTableFilterRow, MTablePagination } from \"material-table\";\nimport { create as ipfsHttpClient } from \"ipfs-http-client\";\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport axios from 'axios'; // material-ui\n\nimport { Grid } from '@mui/material'; // project imports\n\nimport ReportButtonCard from './ReportButtonCard';\nimport ReputationCard from './ReputationCard';\nimport { gridSpacing } from 'store/constant';\nimport ReputationControl from '../../../ReputationControl.json';\nimport { makeStyles } from '@material-ui/core/styles';\nimport HeaderCard from './HeaderCard';\nimport CompanyTable from './CompanyTable';\nimport ChartsCard from './ChartsCard';\nimport { Button } from '@material-ui/core';\nimport TableCard from './TableCard';\nimport TotalIncomeDarkCard from '../../dashboard/Default/TotalIncomeDarkCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.primary.main\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: 'auto',\n    maxWidth: 1000\n  },\n  paperTable: {\n    padding: theme.spacing(2),\n    margin: 'auto',\n    maxWidth: 1200,\n    backgroundColor: '#bbdefb'\n  },\n  paperGraphics: {\n    padding: theme.spacing(2),\n    margin: 'auto',\n    maxWidth: 1200,\n    backgroundColor: '#bbdefb'\n  },\n  button: {\n    color: '#bbdefb',\n    backgroundColor: '#6495ED'\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%'\n  }\n})); // ==============================|| DEFAULT DASHBOARD ||============================== //\n\nconst client = ipfsHttpClient(\"https://ipfs.infura.io:5001/api/v0\");\n\nconst Company = () => {\n  _s();\n\n  const [isLoading, setLoading] = useState(true);\n  const {\n    id\n  } = useParams();\n  const [totalComplaints, setTotalComplaints] = useState(0);\n  const [ourReputation, setOurReputation] = useState(0);\n  const [reputation, setReputation] = useState(\"\");\n  const [complaintsHashes, setComplaintsHashes] = useState([]);\n  const [complaints, setComplaints] = useState([]);\n  const nameCompany = id; //Obtener el nombre de la empresa de la url de la pagina\n\n  const Context = React.useContext(context);\n  const classes = useStyles();\n  useEffect(() => {\n    setLoading(false);\n    Context.contract.methods.getCompanyComplaints(nameCompany).call().then(response => setComplaintsHashes(response));\n    Context.contract.methods.getReputation(nameCompany).call().then(response => setOurReputation(response));\n    Context.contract.methods.getTotalComplaints().call().then(response => setTotalComplaints(response));\n  }, []);\n  useEffect(async () => {\n    let comps = [];\n\n    for (const cid of complaintsHashes) {\n      for await (const chunk of client.cat(cid)) {\n        // do something with buf\n        let json = JSON.parse(uint8ArrayToString(chunk));\n        comps.push({\n          type: json.type,\n          denunciada: json.previousComplaints == \"true\" ? \"SÃ­\" : json.previousComplaints == \"false\" ? \"No\" : \"-----\",\n          media: json.media,\n          date: json.date,\n          gender: json.gender,\n          age: json.age,\n          relation: json.relation,\n          text: json.text\n        });\n        console.log(json.relation);\n      }\n    }\n\n    setComplaints(comps);\n  }, [complaintsHashes]);\n  useEffect(() => {\n    //Dar peso a las denuncias segun el numero que haya\n    let j = 3;\n\n    if (totalComplaints < 10) {\n      j = 0;\n    } else if (totalComplaints < 30) {\n      j = 1;\n    } else if (totalComplaints < 50) {\n      j = 2;\n    }\n\n    axios.get(`${process.env.REACT_APP_SERVER_URL}/getMetrics/${nameCompany.toLowerCase()}`, {\n      withCredentials: true\n    }).then(response => {\n      var result = 0;\n      response.data.map(elem => {\n        result += elem * Context.pesos[j][0];\n      }); //result += (Context.pesos[j][1] * (10 - 0.01*ourReputation));\n\n      result += Context.pesos[j][1] * (5 * Math.exp(-ourReputation / 20) + 5 * (1 - ourReputation / totalComplaints));\n      setReputation(result.toFixed(2));\n    });\n  }, [ourReputation, totalComplaints]);\n  return (\n    /*#__PURE__*/\n    // dos filas\n    _jsxDEV(Grid, {\n      container: true,\n      spacing: gridSpacing,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: gridSpacing,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            lg: 8,\n            md: 12,\n            sm: 12,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(HeaderCard, {\n              name: nameCompany,\n              isLoading: isLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            lg: 4,\n            md: 12,\n            sm: 12,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: gridSpacing,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                sm: 6,\n                xs: 12,\n                md: 6,\n                lg: 12,\n                children: /*#__PURE__*/_jsxDEV(ReportButtonCard, {\n                  isLoading: isLoading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                sm: 6,\n                xs: 12,\n                md: 6,\n                lg: 12,\n                children: /*#__PURE__*/_jsxDEV(ReputationCard, {\n                  isLoading: isLoading,\n                  reputation: reputation\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: gridSpacing,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 8,\n            sm: 12,\n            children: /*#__PURE__*/_jsxDEV(TableCard, {\n              complaints: complaints\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(ChartsCard, {\n              isLoading: isLoading,\n              complaints: complaints\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(Company, \"A0ZJ65F4JTDw6lUf+nw2c3jcneI=\", false, function () {\n  return [useParams, useStyles];\n});\n\n_c = Company;\nexport default Company;\n\nvar _c;\n\n$RefreshReg$(_c, \"Company\");","map":{"version":3,"sources":["/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/TFG FINAL/TFGI-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/cliente/src/views/pages/company/index.js"],"names":["React","useState","useContext","useEffect","NavLink","useParams","context","MaterialTable","MTableToolbar","MTableFilterRow","MTablePagination","create","ipfsHttpClient","toString","uint8ArrayToString","axios","Grid","ReportButtonCard","ReputationCard","gridSpacing","ReputationControl","makeStyles","HeaderCard","CompanyTable","ChartsCard","Button","TableCard","TotalIncomeDarkCard","useStyles","theme","root","backgroundColor","palette","primary","main","paper","padding","spacing","margin","maxWidth","paperTable","paperGraphics","button","color","img","display","maxHeight","client","Company","isLoading","setLoading","id","totalComplaints","setTotalComplaints","ourReputation","setOurReputation","reputation","setReputation","complaintsHashes","setComplaintsHashes","complaints","setComplaints","nameCompany","Context","classes","contract","methods","getCompanyComplaints","call","then","response","getReputation","getTotalComplaints","comps","cid","chunk","cat","json","JSON","parse","push","type","denunciada","previousComplaints","media","date","gender","age","relation","text","console","log","j","get","process","env","REACT_APP_SERVER_URL","toLowerCase","withCredentials","result","data","map","elem","pesos","Math","exp","toFixed"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { NavLink, useParams  } from 'react-router-dom';\nimport { context } from '../../../contextProvider.js';\nimport MaterialTable , { MTableToolbar, MTableFilterRow, MTablePagination } from \"material-table\";\nimport { create as ipfsHttpClient } from \"ipfs-http-client\";\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport axios from 'axios';\n\n\n// material-ui\nimport { Grid } from '@mui/material';\n\n// project imports\nimport ReportButtonCard from './ReportButtonCard';\nimport ReputationCard from './ReputationCard';\nimport { gridSpacing } from 'store/constant';\nimport ReputationControl from '../../../ReputationControl.json';\nimport { makeStyles } from '@material-ui/core/styles';\nimport HeaderCard from './HeaderCard'\nimport CompanyTable from './CompanyTable'\nimport ChartsCard from './ChartsCard'\nimport { Button } from '@material-ui/core';\nimport TableCard from './TableCard'\nimport TotalIncomeDarkCard from '../../dashboard/Default/TotalIncomeDarkCard';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      backgroundColor: theme.palette.primary.main\n    },\n  \n  \n    paper: {\n      padding: theme.spacing(2),\n      margin: 'auto',\n      maxWidth: 1000,\n    },\n    paperTable: {\n      padding: theme.spacing(2),\n      margin: 'auto',\n      maxWidth: 1200,\n      backgroundColor: '#bbdefb',\n    },\n    paperGraphics: {\n      padding: theme.spacing(2),\n      margin: 'auto',\n      maxWidth: 1200,\n      backgroundColor: '#bbdefb'\n    },\n    button: {\n      color: '#bbdefb' , \n      backgroundColor: '#6495ED'\n    },\n    img: {\n      margin: 'auto',\n      display: 'block',\n      maxWidth: '100%',\n      maxHeight: '100%',\n    },\n  }));\n// ==============================|| DEFAULT DASHBOARD ||============================== //\n\nconst client = ipfsHttpClient(\"https://ipfs.infura.io:5001/api/v0\");\n\n\nconst Company = () => {\n\n    const [isLoading, setLoading] = useState(true);\n    const { id } = useParams();\n    const [totalComplaints, setTotalComplaints] = useState(0);\n    const [ourReputation, setOurReputation] = useState(0);\n    const [reputation, setReputation] = useState(\"\");\n    const [complaintsHashes, setComplaintsHashes] = useState([]);\n    const [complaints, setComplaints] = useState([]);\n    const nameCompany = id; //Obtener el nombre de la empresa de la url de la pagina\n    const Context = React.useContext(context);\n    const classes = useStyles();\n    \n    useEffect(() => {\n        setLoading(false);\n        Context.contract.methods.getCompanyComplaints(nameCompany).call().then(response => setComplaintsHashes(response));\n        Context.contract.methods.getReputation(nameCompany).call().then(response => setOurReputation(response));\n        Context.contract.methods.getTotalComplaints().call().then(response  => setTotalComplaints(response));\n    }, []);\n\n    useEffect(async () => {\n        let comps = [];\n        for(const cid of complaintsHashes){\n            for await (const chunk of client.cat(cid)) {\n            // do something with buf\n                let json = JSON.parse(uint8ArrayToString(chunk));\n                comps.push({\n                    type: json.type,\n                    denunciada: json.previousComplaints == \"true\" ? \"SÃ­\" : json.previousComplaints == \"false\" ? \"No\" : \"-----\", \n                    media: json.media,\n                    date: json.date,\n                    gender : json.gender,\n                    age : json.age,\n                    relation : json.relation,\n                    text: json.text\n                })\n\n                console.log(json.relation);\n            }\n        }\n       \n        setComplaints(comps);\n    }, [complaintsHashes]);\n\n\n    useEffect(() => {\n        //Dar peso a las denuncias segun el numero que haya\n        let j = 3;\n        if(totalComplaints < 10){\n            j = 0;\n        }\n        else if (totalComplaints < 30){\n            j = 1;\n        }\n        else if(totalComplaints < 50){\n            j = 2;\n        }\n\n        axios.get(`${process.env.REACT_APP_SERVER_URL}/getMetrics/${nameCompany.toLowerCase()}`, { withCredentials : true})\n            .then((response) => { \n                var result = 0;\n                response.data.map((elem) => {result += (elem * Context.pesos[j][0])});\n                //result += (Context.pesos[j][1] * (10 - 0.01*ourReputation));\n                result += (Context.pesos[j][1] * ((5*(Math.exp(-ourReputation/20)) + 5*(1-ourReputation/totalComplaints))));\n                setReputation(result.toFixed(2));\n        });\n    },[ourReputation, totalComplaints]); \n\n    return (\n        // dos filas\n        <Grid container spacing={gridSpacing}>\n            {/* fila 1 */}\n            <Grid item xs={12}>\n                {/* 3 columnas */}\n                <Grid container spacing={gridSpacing}>\n                    {/* columna 1 */}\n                    <Grid item lg={8} md={12} sm={12} xs={12}>\n{/*                         <HeaderCompany name = {nameCompany} isLoading={isLoading} />\n */}                    \n                            <HeaderCard name = {nameCompany} isLoading={isLoading} />\n                    </Grid>\n                        \n                    {/* columna 3 */}\n                    <Grid item lg={4} md={12} sm={12} xs={12}>\n                        {/* 2 filas en la 3à¸¢à¸ columna */}\n                        <Grid container spacing={gridSpacing}>\n                            {/* fila 1 en la 3à¸¢à¸ columna */}\n                            <Grid item sm={6} xs={12} md={6} lg={12}>\n                                    <ReportButtonCard isLoading={isLoading} />\n                            </Grid>\n                            {/* fila 2 en la 3à¸¢à¸ columna */}\n                            <Grid item sm={6} xs={12} md={6} lg={12}>\n                                <ReputationCard isLoading={isLoading} reputation = {reputation}/>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12} sm = {12}>\n                 {/* 2 columnas */}\n                <Grid container spacing={gridSpacing}>\n                    {/* columna 1 */}\n                    <Grid item xs={12} md={8} sm = {12}>\n                        <TableCard complaints = {complaints}/>\n                        \n                    </Grid>\n                    {/* columna 2 */}\n                    <Grid item xs={12} md={4} >\n                        <ChartsCard isLoading={isLoading} complaints = {complaints}/>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Company;"]},"metadata":{},"sourceType":"module"}