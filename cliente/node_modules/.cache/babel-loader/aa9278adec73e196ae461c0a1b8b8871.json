{"ast":null,"code":"var _jsxFileName = \"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/TFG PLANTILLA GIT/TFGI-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/cliente/src/index.js\";\nimport ReactDOM from 'react-dom'; // third party\n\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux'; // project imports\n\nimport * as serviceWorker from 'serviceWorker';\nimport App from 'App';\nimport { store } from 'store'; // style + assets\n\nimport 'assets/scss/style.scss'; // ==============================|| REACT DOM RENDER  ||============================== //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(Joyride, {\n      continuous: true //disableOverlay        \n      ,\n      callback: data => {\n        const {\n          status\n        } = data;\n\n        if ([STATUS.FINISHED].includes(status) || [STATUS.SKIPPED].includes(status)) {\n          localStorage.setItem('notDone', 'false');\n          setnotDone(false);\n        }\n      },\n      scrollToFirstStep: true //el botoncito\n      ,\n      showProgress: true,\n      showSkipButton: true,\n      run: localStorage.getItem('notDone') == 'true' ? true : false,\n      steps: steps,\n      styles: {\n        options: {\n          zIndex: 10000\n        },\n        buttonClose: {\n          display: 'none'\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 5\n}, this), document.getElementById('root'));\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/TFG PLANTILLA GIT/TFGI-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/cliente/src/index.js"],"names":["ReactDOM","BrowserRouter","Provider","serviceWorker","App","store","render","data","status","STATUS","FINISHED","includes","SKIPPED","localStorage","setItem","setnotDone","getItem","steps","options","zIndex","buttonClose","display","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,WAArB,C,CAEA;;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,QAAT,QAAyB,aAAzB,C,CAEA;;AACA,OAAO,KAAKC,aAAZ,MAA+B,eAA/B;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,SAASC,KAAT,QAAsB,OAAtB,C,CAEA;;AACA,OAAO,wBAAP,C,CAEA;;;AAEAL,QAAQ,CAACM,MAAT,eACI,QAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA,yBACI,QAAC,aAAD;AAAA,4BACA,QAAC,OAAD;AACoC,MAAA,UAAU,EAAE,IADhD,CAEoC;AAFpC;AAIoC,MAAA,QAAQ,EAAGE,IAAD,IAAU;AAChB,cAAM;AAAEC,UAAAA;AAAF,YAAaD,IAAnB;;AAEA,YAAI,CAACE,MAAM,CAACC,QAAR,EAAkBC,QAAlB,CAA2BH,MAA3B,KAAsC,CAACC,MAAM,CAACG,OAAR,EAAiBD,QAAjB,CAA0BH,MAA1B,CAA1C,EAA6E;AACzEK,UAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgC,OAAhC;AACAC,UAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AAEJ,OAZrC;AAaoC,MAAA,iBAAiB,EAAE,IAbvD,CAa6D;AAb7D;AAcoC,MAAA,YAAY,EAAE,IAdlD;AAeoC,MAAA,cAAc,EAAE,IAfpD;AAgBoC,MAAA,GAAG,EAAIF,YAAY,CAACG,OAAb,CAAqB,SAArB,KAAmC,MAAnC,GAA6C,IAA7C,GAAoD,KAhB/F;AAiBoC,MAAA,KAAK,EAAEC,KAjB3C;AAkBoC,MAAA,MAAM,EAAE;AACJC,QAAAA,OAAO,EAAE;AACTC,UAAAA,MAAM,EAAE;AADC,SADL;AAIJC,QAAAA,WAAW,EAAE;AACTC,UAAAA,OAAO,EAAE;AADA;AAJT;AAlB5C;AAAA;AAAA;AAAA;AAAA,YADA,eA4BI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,QADJ,EAiCIC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAjCJ;AAqCApB,aAAa,CAACqB,UAAd","sourcesContent":["import ReactDOM from 'react-dom';\n\n// third party\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\n// project imports\nimport * as serviceWorker from 'serviceWorker';\nimport App from 'App';\nimport { store } from 'store';\n\n// style + assets\nimport 'assets/scss/style.scss';\n\n// ==============================|| REACT DOM RENDER  ||============================== //\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n        <Joyride\n                                            continuous={true}  \n                                            //disableOverlay        \n                                            \n                                            callback={(data) => {\n                                                const { status } = data;\n\n                                                if ([STATUS.FINISHED].includes(status) || [STATUS.SKIPPED].includes(status)) {\n                                                    localStorage.setItem('notDone', 'false');\n                                                    setnotDone(false);\n                                                } \n                                                \n                                            }} \n                                            scrollToFirstStep={true} //el botoncito\n                                            showProgress={true}\n                                            showSkipButton={true}\n                                            run = {localStorage.getItem('notDone') == 'true' ? (true):(false)}\n                                            steps={steps}\n                                            styles={{\n                                                options: {\n                                                zIndex: 10000,\n                                                },\n                                                buttonClose: {\n                                                    display: 'none',\n                                                },\n                                            }}\n                                        />\n            <App />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}